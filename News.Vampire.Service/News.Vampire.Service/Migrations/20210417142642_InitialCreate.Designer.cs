// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using News.Vampire.Service.DataAccess;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace News.Vampire.Service.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210417142642_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("News.Vampire.Service.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Корреспондент",
                            isActive = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "Habr",
                            isActive = true
                        },
                        new
                        {
                            Id = 3,
                            Name = "News.RU",
                            isActive = true
                        });
                });

            modelBuilder.Entity("News.Vampire.Service.Models.NewsItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<List<string>>("Author")
                        .HasColumnType("jsonb")
                        .HasMaxLength(256);

                    b.Property<List<string>>("Category")
                        .HasColumnType("jsonb")
                        .HasMaxLength(512);

                    b.Property<string>("Description")
                        .HasColumnType("character varying(4096)")
                        .HasMaxLength(4096);

                    b.Property<string>("ExternalId")
                        .HasColumnType("text");

                    b.Property<long>("PublicationDate")
                        .HasColumnType("bigint");

                    b.Property<int>("SourceId")
                        .HasColumnType("integer");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("character varying(512)")
                        .HasMaxLength(512);

                    b.Property<List<string>>("Url")
                        .HasColumnType("jsonb")
                        .HasMaxLength(2048);

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("NewsItem");
                });

            modelBuilder.Entity("News.Vampire.Service.Models.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<int?>("GroupId1")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<long>("NextLoadedTime")
                        .HasColumnType("bigint");

                    b.Property<int>("Sort")
                        .HasColumnType("integer");

                    b.Property<int>("UpdateFrequencyMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("GroupId1");

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GroupId = 1L,
                            Name = "Последние новости по разделу События в Украине",
                            NextLoadedTime = 0L,
                            Sort = 0,
                            UpdateFrequencyMinutes = 0,
                            Url = "http://k.img.com.ua/rss/ru/events.xml"
                        },
                        new
                        {
                            Id = 2,
                            GroupId = 1L,
                            Name = "Автомобили",
                            NextLoadedTime = 0L,
                            Sort = 0,
                            UpdateFrequencyMinutes = 0,
                            Url = "http://k.img.com.ua/rss/ru/motors.xml"
                        },
                        new
                        {
                            Id = 3,
                            GroupId = 1L,
                            Name = "Новости кино",
                            NextLoadedTime = 0L,
                            Sort = 0,
                            UpdateFrequencyMinutes = 0,
                            Url = "http://k.img.com.ua/rss/ru/cinema.xml"
                        },
                        new
                        {
                            Id = 4,
                            GroupId = 1L,
                            Name = "Технологии",
                            NextLoadedTime = 0L,
                            Sort = 0,
                            UpdateFrequencyMinutes = 0,
                            Url = "http://k.img.com.ua/rss/ru/technews.xml"
                        },
                        new
                        {
                            Id = 5,
                            GroupId = 1L,
                            Name = "Космос",
                            NextLoadedTime = 0L,
                            Sort = 0,
                            UpdateFrequencyMinutes = 0,
                            Url = "http://k.img.com.ua/rss/ru/space.xml"
                        },
                        new
                        {
                            Id = 6,
                            GroupId = 2L,
                            Name = "HABR. Все публикации в потоке Разработка",
                            NextLoadedTime = 0L,
                            Sort = 0,
                            UpdateFrequencyMinutes = 0,
                            Url = "https://habr.com/ru/rss/flows/develop/all/?fl=rul"
                        },
                        new
                        {
                            Id = 7,
                            GroupId = 2L,
                            Name = "NEWSru.com :: Мнения",
                            NextLoadedTime = 0L,
                            Sort = 0,
                            UpdateFrequencyMinutes = 0,
                            Url = "https://rss.newsru.com/blog"
                        });
                });

            modelBuilder.Entity("News.Vampire.Service.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("LastLoadedTime")
                        .HasColumnType("bigint");

                    b.Property<int>("SourceId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SourceId = 1,
                            UserGroupId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            SourceId = 2,
                            UserGroupId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            SourceId = 6,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            SourceId = 7,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("News.Vampire.Service.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Login")
                        .HasColumnType("character varying(16)")
                        .HasMaxLength(16);

                    b.Property<string>("Password")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Role")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "Dmitry"
                        });
                });

            modelBuilder.Entity("News.Vampire.Service.Models.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(64)")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "My Group"
                        });
                });

            modelBuilder.Entity("News.Vampire.Service.Models.NewsItem", b =>
                {
                    b.HasOne("News.Vampire.Service.Models.Source", null)
                        .WithMany("News")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("News.Vampire.Service.Models.Source", b =>
                {
                    b.HasOne("News.Vampire.Service.Models.Group", null)
                        .WithMany("Sources")
                        .HasForeignKey("GroupId1");
                });

            modelBuilder.Entity("News.Vampire.Service.Models.Subscription", b =>
                {
                    b.HasOne("News.Vampire.Service.Models.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("News.Vampire.Service.Models.UserGroup", "Group")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserGroupId");

                    b.HasOne("News.Vampire.Service.Models.User", null)
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
